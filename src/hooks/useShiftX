// src/hooks/useShiftX.js   ← new name to avoid confusion
'use client';
import { useEffect, useState } from 'react';

export default function useShiftX({ maxShift = 40 } = {}) {
  const [transform, setTransform] = useState('translateX(0px)');

  useEffect(() => {
    const isTouch = matchMedia('(hover: none)').matches;

    /** mouse (desktop) */
    const onMouseMove = (e) => {
      const ratio = (e.clientX / window.innerWidth) * 2 - 1; // −1 → +1
      setTransform(`translateX(${ratio * maxShift}px)`);
    };

    /** gyro (mobile) */
    const onOrientation = (e) => {
      const x = (e.gamma ?? 0) / 45; // normalize ±45°
      setTransform(`translateX(${x * maxShift}px)`);
    };

    if (isTouch && window.DeviceOrientationEvent) {
      window.addEventListener('deviceorientation', onOrientation, true);
      return () =>
        window.removeEventListener('deviceorientation', onOrientation, true);
    }

    window.addEventListener('mousemove', onMouseMove);
    return () => window.removeEventListener('mousemove', onMouseMove);
  }, [maxShift]);

  return transform;            // e.g. "translateX(12px)"
}
